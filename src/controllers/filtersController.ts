/**
 * Stack Overflow For Teams Read APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { string } from '../schema';
import { BaseController } from './baseController';

export class FiltersController extends BaseController {
  /**
   * Creates a filter and assigns it a unique ID.
   * Filters are good for selecting subsets of attributes of a type (e.g. of an answer, post, etc.) to be
   * returned by the server.
   *
   * See also: `<your Stack instance's API server URL>/docs/filters`
   *
   * @return Response from the API call
   */
  async createFilter(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET', '/filters/create');
    return req.call(requestOptions);
  }

  /**
   * Creates a filter and assigns it a unique ID.
   * Filters are good for selecting subsets of attributes of a type (e.g. of an answer, post, etc.) to be
   * returned by the server.
   *
   * See also: `<your Stack instance's API server URL>/docs/filters`
   *
   * @param filterId
   * @return Response from the API call
   */
  async getFilterFields(
    filterId: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET');
    const mapped = req.prepareArgs({ filterId: [filterId, string()] });
    req.appendTemplatePath`/filters/${mapped.filterId}`;
    return req.call(requestOptions);
  }

  /**
   * Creates a filter via POST. This is useful, if the list of attributes to include or exclude becomes
   * too long to specify as URL parameters.
   *
   * Use form-data in the POST body to specify them instead.
   *
   * See also: `<your Stack instance's API server URL>/docs/filters`
   *
   * @return Response from the API call
   */
  async createFilterViaPOST(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/filters/create');
    return req.call(requestOptions);
  }
}
